<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ErrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQkJCQHGRkZCqiopte0s7L/uLe1/7i4tv+5uLb/ubi2/7m4
        tv+5uLb/IVKx/yNXvf8kWcH/JVnC/yVZwv8kWcH/JFe9/yJSsv+5uLb/ubi2/7m4tv+5uLb/uLi2/7i3
        tf+0s7L/qKim1wAAAAoAAAAIAAAABQAAAAEAAAAAAAAAAAAAAAAAAAAAtLSz/8fHxv/Ly8r/zMzL/83N
        zP/Nzcz/zc3M/83NzP8iWcH/JmPV/ydl2v8nZtv/J2bb/ydm2/8mY9b/IlrC/83NzP/Nzcz/zc3M/83N
        zP/MzMv/zMzL/8jIx/+1tbT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC5urn/zM3N/87P
        z//Oz8//zs/P/87Pz//Oz8//zs/P/yFeyv8laN//JWnh/yVp4f8laeH/JWnh/yVp4P8iX8v/zs/P/87P
        z//Oz8//zs/P/87Pz//Oz8//zc7N/7m6uv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALu8
        vP/O0ND/z9HR/8/R0f/P0dH/z9HR/8/R0f/P0dH/IGLQ/yRs5f8kbOb/JGzm/yRs5v8kbOb/JGzl/yBi
        0P/P0dH/z9HR/8/R0f/P0dH/z9HR/8/R0f/O0ND/u729/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAvL6+/9DR0v/R09T/0dPU/9HT1P/R09T/0dPU/9HT1P8fZdT/Im/q/yJw7P8icOz/InDs/yJw
        7P8ib+v/H2XV/9HT1P/R09T/0dPU/9HT1P/R09T/0dPU/9DS0/+9vr//AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC9v8H/0dPV/9LV1v/S1db/0tXW/9LV1v/S1db/0tXW/x1n2f8hcu//IXPx/yFz
        8f8hc/H/IXPx/yFy8P8eaNr/0tXW/9LV1v/S1db/0tXW/9LV1v/S1db/0dTV/77Awf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAL7Bw//S1df/09fY/9PX2P/T19j/09fY/9PX2P/T19j/IWvb/yV2
        8v8ld/T/JXf0/yV39P8ld/T/JXbz/yFr3P/T19j/09fY/9PX2P/T19j/09fY/9PX2P/S1tf/v8LD/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv8PF/9PX2f/U2Nv/1Njb/9TY2//U2Nv/1Njb/9TY
        2/8ocNz/LXvz/y189f8tfPX/LXz1/y189f8tfPT/KXDd/9TY2//U2Nv/1Njb/9TY2//U2Nv/1Njb/9PX
        2v+/w8b/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAxcf/1Nnc/9Xa3f/V2t3/1drd/9Xa
        3f/V2t3/1drd/zB03P81gPP/NoH1/zaB9f82gfX/NoH1/zWB8/8wdd3/1drd/9Xa3f/V2t3/1drd/9Xa
        3f/V2t3/1Nnc/8DFyP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMHGyf/V297/1tzg/9bc
        4P/W3OD/1tzg/9bc4P/W3OD/N3jc/z2F9P8+hvb/Pob2/z6G9v8+hvb/PYX0/zd43f/W3OD/1tzg/9bc
        4P/W3OD/1tzg/9bc4P/V29//wcfK/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvsPH/9bc
        4f/Y3uL/2N7i/9je4v/Y3uL/2N7i/9je4v85csj/P37e/0GB4v9BgeP/QYHj/0GB4v8/ft7/OXLI/9je
        4v/Y3uL/2N7i/9je4v/Y3uL/2N7i/9fd4f+/xMj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIU+sUyFP
        rFOmq6//0djd/9ng5f/Z4OX/2eDl/9ng5f/Z4OX/2eDl/zRfov83Zq3/OWix/zlpsv85abL/OWiw/zdm
        rf80X6L/2eDl/9ng5f/Z4OX/2eDl/9ng5f/Z4OX/0tne/6itsf8hT69TIU+sUwAAAAAAAAAAAAAAAB5P
        slMjV73/JFjA/1l2rP+4vsL/09vg/9rh5//a4ef/2uHn/9rh5//a4ef/2uHn/9rh5//a4ef/2uHn/9rh
        5//a4ef/2uHn/9rh5//a4ef/2uHn/9rh5//a4ef/2uHn/9Tc4f+5v8T/VXa1/yRbxP8jV7z/Hk+vUwAA
        AAAAAAAAHlK1U1WB1P8lYdL/JF7L/19+tf+6wMT/1Nzi/9vj6f/b4+n/2+Pp/9vj6f/b4+n/2+Pp/9vj
        6f/b4+n/2+Pp/9vj6f/b4+n/2+Pp/9vj6f/b4+n/2+Pp/9vj6f/V3eP/u8HH/1p+wP8lYtP/JmLT/yNa
        xP8eUrJTAAAAAAAAAAAAAAAAPnHNlliJ4P8lZtv/I2HR/1+AuP+7wMX/1d3i/9zk6f/c5On/3OTp/9zk
        6f/c5On/3OTp/9zk6f/c5On/3OTp/9zk6f/c5On/3OTp/9zk6f/c5On/1t7j/7zCx/9agMP/JWbb/yZn
        3f8jYdD/IFa8hwAAAAAAAAAAAAAAAAAAAAAAAAAAPnXUlliL5f8laeH/I2TV/1+Buv+7wcX/1t3j/93k
        6v/d5Or/3eTq/93k6v/d5Or/3eTq/93k6v/d5Or/3eTq/93k6v/d5Or/3eTq/9fe5P+9w8f/WoLF/yRo
        3/8lauP/I2TX/yBawocAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPXfXlleN6f8jbOX/ImbZ/1+C
        vP+8wcb/197j/97l6v/e5er/3uXq/97l6v/e5er/3uXq/97l6v/e5er/3uXq/97l6v/Y3+T/vsPI/1mE
        yP8ja+T/I23n/yFn2/8eXMiHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPXjbllaP
        6/8ibuj/IWjc/1+Evv+9wsb/2N/k/97m6//e5uv/3ubr/97m6//e5uv/3ubr/97m6//e5uv/2eDl/7/E
        yP9Zhcr/Im3n/yNv6v8had7/HmDKhwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAU3iy/1WR7v8hcez/H2vf/16FwP+9w8f/2d/k/9/m6//f5uv/3+br/9/m6//f5uv/3+br/9rg
        5f+/xMn/WYfM/yBw6/8icu7/H2zi/xxizYcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACCgH//X4XA/1WT8f8hc/D/H23j/1+Hwf++w8f/2uDl/+Dn7P/g5+z/4Ofs/+Dn
        7P/b4eb/wMXJ/1mIzv8gcu7/IXTy/yBu5v8cZNGHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAI+NjP+dnJv/aI3G/1mV8v8md/H/JHDk/2KIwv+/xMj/2uDl/+Hn
        7P/h5+z/3OHm/8DGyv9di87/JXXu/yZ48/8kceb/IGfRhwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm5mY/6upqP+rqaj/a4/H/12Y8/8te/L/KnTl/2WL
        w//AxMj/2+Hl/9zi5v/Bxsr/YI3P/yx57/8tfPT/K3Xo/yVp04cAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACnpaT/uLa1/7i2tf+npaX/SYbjlmKc
        8/8zf/L/MHjl/2iNw/+8wMT/vcHF/2SPz/8yffD/M4D0/zB55/8rbdOHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALKxsP/FxMP/xcTD/7Oy
        sf8AAAAATonjlmef9P85hPT/N33p/2GGvf9eh8f/OILw/zmE9P82fej/MXHThwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuri3/8zL
        yv/Ny8r/vLu6/wAAAAAAAAAAU43jlmyi9P9AiPX/QIfz/0CH9P9AiPX/PYHo/zR104cAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADDwcHV09LS/9PT0v/FxMTVAAAAAAAAAAAAAAAAWJDjlnCl9P9GjPX/Rov0/0KF6P86eNOHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXZLilnKi7f9HheT/QHzVhwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ3rNU0N6
        zVMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////8AAAAA8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD8AAAAOAAAABgAAAAcAAAAPgAAAH8AAAD/gAAB/8AAA//AAAf/wAAP/8AAH//AAD//wg
        B//8MA///Dgf///8P////n////////////8=
</value>
  </data>
</root>